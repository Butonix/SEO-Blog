{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\nexport var signup = function signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\nexport var signin = function signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n}; // set cookie\n\nexport var setCookie = function setCookie(key, value) {\n  // client side\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  // client side\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport var getCookie = function getCookie(key) {\n  // client side\n  if (true) {\n    cookie.get(key);\n  }\n}; // localstorage\n\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n};\nexport var removeLocalStorage = function removeLocalStorage(key) {\n  if (true) {\n    localStorage.removeItem(key);\n  }\n}; //authenticate user by passing data to cookie and localstorage\n\nexport var authenticate = function authenticate(data, next) {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\nexport var isAuth = function isAuth() {\n  if (true) {\n    var cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/SEO-Blog/frontend/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","then","response","json","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","JSON","parse"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\r\nimport { API } from \"../config\";\r\nimport cookie from \"js-cookie\";\r\n\r\nexport const signup = user => {\r\n  return fetch(`${API}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const signin = user => {\r\n  return fetch(`${API}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n// set cookie\r\n\r\nexport const setCookie = (key, value) => {\r\n  // client side\r\n  if (process.browser) {\r\n    cookie.set(key, value, {\r\n      expires: 1\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n  // client side\r\n  if (process.browser) {\r\n    cookie.remove(key, {\r\n      expires: 1\r\n    });\r\n  }\r\n};\r\n\r\n// get cookie\r\n\r\nexport const getCookie = key => {\r\n  // client side\r\n  if (process.browser) {\r\n    cookie.get(key);\r\n  }\r\n};\r\n\r\n// localstorage\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n  if (process.browser) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n};\r\n\r\nexport const removeLocalStorage = key => {\r\n  if (process.browser) {\r\n    localStorage.removeItem(key);\r\n  }\r\n};\r\n\r\n//authenticate user by passing data to cookie and localstorage\r\n\r\nexport const authenticate = (data, next) => {\r\n  setCookie(\"token\", data.token);\r\n  setLocalStorage(\"user\", data.user);\r\n  next();\r\n};\r\n\r\nexport const isAuth = () => {\r\n  if (process.browser) {\r\n    const cookieChecked = getCookie(\"token\");\r\n    if (cookieChecked) {\r\n      if (localStorage.getItem(\"user\")) {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}