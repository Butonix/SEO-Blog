{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\SEO-Blog\\\\frontend\\\\components\\\\crud\\\\Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { isAuth, getCookie } from \"../../actions/auth\";\nimport { create } from \"../../actions/category\";\n\nvar Category = function Category() {\n  var _useState = useState({\n    name: \"\",\n    error: false,\n    success: false,\n    categories: [],\n    removed: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var name = values.name,\n      error = values.error,\n      success = values.success,\n      categories = values.categories,\n      removed = values.removed;\n  var token = getCookie(\"tooken\");\n\n  var clickSubmit = function clickSubmit(e) {\n    e.preventDefault();\n    console.log(\"create category\", name);\n  };\n\n  var handleChange = function handleChange(e) {\n    setValues(_objectSpread({}, values, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: \"\"\n    }));\n  };\n\n  var newCategoryForm = function newCategoryForm() {\n    return __jsx(\"form\", {\n      onSubmit: clickSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange,\n      value: name,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, newCategoryForm);\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/SEO-Blog/frontend/components/crud/Category.js"],"names":["useState","useEffect","Link","Router","isAuth","getCookie","create","Category","name","error","success","categories","removed","values","setValues","token","clickSubmit","e","preventDefault","console","log","handleChange","target","value","newCategoryForm"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACOP,QAAQ,CAAC;AACnCQ,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,KAF4B;AAGnCC,IAAAA,OAAO,EAAE,KAH0B;AAInCC,IAAAA,UAAU,EAAE,EAJuB;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,GAAD,CADf;AAAA,MACdC,MADc;AAAA,MACNC,SADM;;AAAA,MASbN,IATa,GASiCK,MATjC,CASbL,IATa;AAAA,MASPC,KATO,GASiCI,MATjC,CASPJ,KATO;AAAA,MASAC,OATA,GASiCG,MATjC,CASAH,OATA;AAAA,MASSC,UATT,GASiCE,MATjC,CASSF,UATT;AAAA,MASqBC,OATrB,GASiCC,MATjC,CASqBD,OATrB;AAUrB,MAAMG,KAAK,GAAGV,SAAS,CAAC,QAAD,CAAvB;;AAEA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC,EAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BZ,IAA/B;AACD,GAHD;;AAKA,MAAMa,YAAY,GAAG,SAAfA,YAAe,CAAAJ,CAAC,EAAI;AACxBH,IAAAA,SAAS,mBACJD,MADI;AAEPL,MAAAA,IAAI,EAAES,CAAC,CAACK,MAAF,CAASC,KAFR;AAGPd,MAAAA,KAAK,EAAE,KAHA;AAIPC,MAAAA,OAAO,EAAE,KAJF;AAKPE,MAAAA,OAAO,EAAE;AALF,OAAT;AAOD,GARD;;AAUA,MAAMY,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WACtB;AAAM,MAAA,QAAQ,EAAER,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,QAAQ,EAAEK,YAAtD;AAAoE,MAAA,KAAK,EAAEb,IAA3E;AAAiF,MAAA,QAAQ,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADsB;AAAA,GAAxB;;AAUA,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBgB,eAAjB,CAAP;AACD,CAtCD;;AAwCA,eAAejB,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport { isAuth, getCookie } from \"../../actions/auth\";\r\nimport { create } from \"../../actions/category\";\r\n\r\nconst Category = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    error: false,\r\n    success: false,\r\n    categories: [],\r\n    removed: false\r\n  });\r\n\r\n  const { name, error, success, categories, removed } = values;\r\n  const token = getCookie(\"tooken\");\r\n\r\n  const clickSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(\"create category\", name);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setValues({\r\n      ...values,\r\n      name: e.target.value,\r\n      error: false,\r\n      success: false,\r\n      removed: \"\"\r\n    });\r\n  };\r\n\r\n  const newCategoryForm = () => (\r\n    <form onSubmit={clickSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n\r\n  return <React.Fragment>{newCategoryForm}</React.Fragment>;\r\n};\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}