{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nexport var createBlog = function createBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\nexport var listBlogWithCategoriesAndTags = function listBlogWithCategoriesAndTags(limit, skip) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/SEO-Blog/frontend/actions/blog.js"],"names":["fetch","API","createBlog","blog","token","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogWithCategoriesAndTags","limit","skip","data","singleBlog","slug"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACzC,SAAOJ,KAAK,WAAIC,GAAJ,YAAgB;AAC1BI,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEPC,MAAAA,aAAa,mBAAYJ,KAAZ;AAFN,KAFiB;AAM1BK,IAAAA,IAAI,EAAEN;AANoB,GAAhB,CAAL,CAQJO,IARI,CAQC,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,WAWE,UAAAC,GAAG,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAbI,CAAP;AAcD,CAfM;AAiBP,OAAO,IAAMG,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAC5D,MAAMC,IAAI,GAAG;AACXF,IAAAA,KAAK,EAALA,KADW;AAEXC,IAAAA,IAAI,EAAJA;AAFW,GAAb;AAKA,SAAOlB,KAAK,WAAIC,GAAJ,6BAAiC;AAC3CI,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFkC;AAM3CE,IAAAA,IAAI,EAAE,gBAAeU,IAAf;AANqC,GAAjC,CAAL,CAQJT,IARI,CAQC,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,WAWE,UAAAC,GAAG,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAbI,CAAP;AAcD,CApBM;AAsBP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AAChC,SAAOrB,KAAK,WAAIC,GAAJ,mBAAgBoB,IAAhB,GAAwB;AAClChB,IAAAA,MAAM,EAAE;AAD0B,GAAxB,CAAL,CAGJK,IAHI,CAGC,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GALI,WAME,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GANL,CAAP;AAOD,CARM","sourcesContent":["import fetch from \"isomorphic-fetch\";\r\nimport { API } from \"../config\";\r\n\r\nexport const createBlog = (blog, token) => {\r\n  return fetch(`${API}/blog`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`\r\n    },\r\n    body: blog\r\n  })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const listBlogWithCategoriesAndTags = (limit, skip) => {\r\n  const data = {\r\n    limit,\r\n    skip\r\n  };\r\n\r\n  return fetch(`${API}/blogs-categories-tags`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const singleBlog = slug => {\r\n  return fetch(`${API}/blog/${slug}`, {\r\n    method: \"GET\"\r\n  })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}