{"version":3,"file":"static/webpack/static/development/pages/admin/crud/category-tag.js.e5df6e27b846f3e4c132.hot-update.js","sources":["webpack:///./components/crud/Tag.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { isAuth, getCookie } from \"../../actions/auth\";\nimport { create, getTags, removeTag, singleTag } from \"../../actions/tag\";\nconst Tag = () => {\n    const [values, setValues] = useState({\n        name: \"\",\n        error: false,\n        success: false,\n        tags: [],\n        removed: false,\n        reload: false\n    });\n\n    const { name, error, success, tags, removed, reload } = values;\n    const token = getCookie(\"token\");\n\n    useEffect(() => {\n        loadTags();\n    }, [reload]);\n    const loadTags = () => {\n        getTags().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setValues({ ...values, tags: data });\n            }\n        });\n    };\n\n    const showTags = () => {\n        return tags.map((el, index) => {\n            return (\n                <button\n                    onDoubleClick={() => deleteConfirm(el.slug)}\n                    title=\"Double click to delete\"\n                    key={index}\n                    className=\"btn btn-outline-primary mr-1 ml-1 mt-3 \"\n                >\n                    {el.name}\n                </button>\n            );\n        });\n    };\n\n    const deleteConfirm = slug => {\n        let answer = window.confirm(\"Are you sure you want to delete this tag? \");\n        if (answer) {\n            deleteTag(slug);\n        }\n    };\n\n    const deleteTag = slug => {\n        console.log(\"delete\", slug);\n\n        removeTag(slug, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setValues({ ...values, error: false, success: false, name: \"\", removed: !removed, reload: !reload });\n            }\n        });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        create({ name }, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error, success: false });\n            } else {\n                setValues({ ...values, error: false, success: true, name: \"\", removed: false, reload: !reload });\n            }\n        });\n    };\n\n    const handleChange = e => {\n        setValues({\n            ...values,\n            name: e.target.value,\n            error: false,\n            success: false,\n            removed: \"\"\n        });\n    };\n\n    const showSuccess = () => {\n        if (success) {\n            return <p className=\"text-success\">Tag is created</p>;\n        }\n    };\n\n    const showError = () => {\n        if (error) {\n            return <p className=\"text-danger\">Tag already exist</p>;\n        }\n    };\n\n    const showRemoved = () => {\n        if (removed) {\n            return <p className=\"text-danger\">Tag is removed</p>;\n        }\n    };\n\n    const newTagForm = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Tag Name</label>\n                <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n                Create\n            </button>\n        </form>\n    );\n\n    const mouseMoveHandler = () => {\n        setValues({ ...values, error: false, success: false, removed: \"\" });\n    };\n\n    return (\n        <React.Fragment>\n            {showSuccess()}\n            {showError()}\n            {showRemoved()}\n\n            <div onMouseMove={mouseMoveHandler}>\n                {newTagForm()}\n                {showTags()}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Tag;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}